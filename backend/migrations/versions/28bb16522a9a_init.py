"""init

Revision ID: 28bb16522a9a
Revises: 
Create Date: 2024-11-02 19:11:09.998158

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '28bb16522a9a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('beatmapsets',
    sa.Column('artist', sa.String(length=255), nullable=True),
    sa.Column('artist_unicode', sa.String(length=255), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('creator', sa.String(length=18), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('slimcover', sa.String(length=255), nullable=True),
    sa.Column('slimcover_2x', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=32), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('title_unicode', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('client_key',
    sa.Column('access_token', sa.String(length=2000), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('token_type', sa.String(length=16), nullable=False),
    sa.PrimaryKeyConstraint('token_type')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('access_token', sa.String(length=2000), nullable=True),
    sa.Column('token_type', sa.String(length=16), nullable=True),
    sa.Column('avatar_url', sa.String(length=255), nullable=True),
    sa.Column('country_code', sa.String(length=32), nullable=True),
    sa.Column('cover_url', sa.String(length=255), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('playmode', sa.String(length=32), nullable=True),
    sa.Column('registration_date', sa.DateTime(), nullable=True),
    sa.Column('username', sa.String(length=18), nullable=True),
    sa.Column('streak_current', sa.Integer(), nullable=True),
    sa.Column('streak_longest', sa.Integer(), nullable=True),
    sa.Column('streak_counted', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('beatmaps',
    sa.Column('beatmapset_id', sa.Integer(), nullable=False),
    sa.Column('difficulty_rating', sa.Float(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ruleset', sa.String(length=32), nullable=True),
    sa.Column('total_length', sa.Integer(), nullable=True),
    sa.Column('version', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['beatmapset_id'], ['beatmapsets.id'], ),
    sa.PrimaryKeyConstraint('beatmapset_id', 'id', name='pk_beatmap')
    )
    with op.batch_alter_table('beatmaps', schema=None) as batch_op:
        batch_op.create_index('ix_beatmaps_id', ['id'], unique=False)

    op.create_table('daily_statistics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ruleset', sa.String(length=32), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('play_time', sa.Integer(), nullable=True),
    sa.Column('play_count', sa.Integer(), nullable=True),
    sa.Column('total_hits', sa.Integer(), nullable=True),
    sa.Column('ranked_score', sa.Integer(), nullable=True),
    sa.Column('streak_counted', sa.Boolean(), nullable=True),
    sa.Column('total_score', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id', 'ruleset', 'start_date', name='daily_statistics_pk')
    )
    op.create_table('users_catch',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('username', sa.String(length=18), nullable=True),
    sa.Column('accumulated_play_count', sa.Integer(), nullable=True),
    sa.Column('accumulated_play_time', sa.Integer(), nullable=True),
    sa.Column('accumulated_total_hits', sa.BigInteger(), nullable=True),
    sa.Column('accumulated_ranked_score', sa.BigInteger(), nullable=True),
    sa.Column('accumulated_total_score', sa.BigInteger(), nullable=True),
    sa.Column('play_count', sa.Integer(), nullable=True),
    sa.Column('play_time', sa.Integer(), nullable=True),
    sa.Column('total_hits', sa.BigInteger(), nullable=True),
    sa.Column('ranked_score', sa.BigInteger(), nullable=True),
    sa.Column('total_score', sa.BigInteger(), nullable=True),
    sa.Column('streak_current', sa.Integer(), nullable=True),
    sa.Column('streak_longest', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users_mania',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('username', sa.String(length=18), nullable=True),
    sa.Column('accumulated_play_count', sa.Integer(), nullable=True),
    sa.Column('accumulated_play_time', sa.Integer(), nullable=True),
    sa.Column('accumulated_total_hits', sa.BigInteger(), nullable=True),
    sa.Column('accumulated_ranked_score', sa.BigInteger(), nullable=True),
    sa.Column('accumulated_total_score', sa.BigInteger(), nullable=True),
    sa.Column('play_count', sa.Integer(), nullable=True),
    sa.Column('play_time', sa.Integer(), nullable=True),
    sa.Column('total_hits', sa.BigInteger(), nullable=True),
    sa.Column('ranked_score', sa.BigInteger(), nullable=True),
    sa.Column('total_score', sa.BigInteger(), nullable=True),
    sa.Column('streak_current', sa.Integer(), nullable=True),
    sa.Column('streak_longest', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users_osu',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('username', sa.String(length=18), nullable=True),
    sa.Column('accumulated_play_count', sa.Integer(), nullable=True),
    sa.Column('accumulated_play_time', sa.Integer(), nullable=True),
    sa.Column('accumulated_total_hits', sa.BigInteger(), nullable=True),
    sa.Column('accumulated_ranked_score', sa.BigInteger(), nullable=True),
    sa.Column('accumulated_total_score', sa.BigInteger(), nullable=True),
    sa.Column('play_count', sa.Integer(), nullable=True),
    sa.Column('play_time', sa.Integer(), nullable=True),
    sa.Column('total_hits', sa.BigInteger(), nullable=True),
    sa.Column('ranked_score', sa.BigInteger(), nullable=True),
    sa.Column('total_score', sa.BigInteger(), nullable=True),
    sa.Column('streak_current', sa.Integer(), nullable=True),
    sa.Column('streak_longest', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users_taiko',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('username', sa.String(length=18), nullable=True),
    sa.Column('accumulated_play_count', sa.Integer(), nullable=True),
    sa.Column('accumulated_play_time', sa.Integer(), nullable=True),
    sa.Column('accumulated_total_hits', sa.BigInteger(), nullable=True),
    sa.Column('accumulated_ranked_score', sa.BigInteger(), nullable=True),
    sa.Column('accumulated_total_score', sa.BigInteger(), nullable=True),
    sa.Column('play_count', sa.Integer(), nullable=True),
    sa.Column('play_time', sa.Integer(), nullable=True),
    sa.Column('total_hits', sa.BigInteger(), nullable=True),
    sa.Column('ranked_score', sa.BigInteger(), nullable=True),
    sa.Column('total_score', sa.BigInteger(), nullable=True),
    sa.Column('streak_current', sa.Integer(), nullable=True),
    sa.Column('streak_longest', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('scores',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('ruleset', sa.String(length=16), nullable=True),
    sa.Column('count_300', sa.Integer(), nullable=True),
    sa.Column('count_100', sa.Integer(), nullable=True),
    sa.Column('count_50', sa.Integer(), nullable=True),
    sa.Column('count_geki', sa.Integer(), nullable=True),
    sa.Column('count_katu', sa.Integer(), nullable=True),
    sa.Column('count_miss', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Integer(), nullable=True),
    sa.Column('accuracy', sa.Float(), nullable=True),
    sa.Column('beatmap_id', sa.Integer(), nullable=True),
    sa.Column('beatmapset_id', sa.Integer(), nullable=True),
    sa.Column('max_combo', sa.Integer(), nullable=True),
    sa.Column('mods', sa.String(length=16), nullable=True),
    sa.Column('passed', sa.Boolean(), nullable=True),
    sa.Column('rank', sa.String(length=16), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['beatmap_id'], ['beatmaps.id'], ),
    sa.ForeignKeyConstraint(['beatmapset_id'], ['beatmapsets.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'timestamp', name='scores_pk')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('scores')
    op.drop_table('users_taiko')
    op.drop_table('users_osu')
    op.drop_table('users_mania')
    op.drop_table('users_catch')
    op.drop_table('daily_statistics')
    with op.batch_alter_table('beatmaps', schema=None) as batch_op:
        batch_op.drop_index('ix_beatmaps_id')

    op.drop_table('beatmaps')
    op.drop_table('users')
    op.drop_table('client_key')
    op.drop_table('beatmapsets')
    # ### end Alembic commands ###
